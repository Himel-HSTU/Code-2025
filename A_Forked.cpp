/*
██████╗░██╗░██████╗███╗░░░███╗██╗██╗░░░░░██╗░░░░░░█████╗░██╗░░██╗██╗██████╗░
██╔══██╗██║██╔════╝████╗░████║██║██║░░░░░██║░░░░░██╔══██╗██║░░██║██║██╔══██╗
██████╦╝██║╚█████╗░██╔████╔██║██║██║░░░░░██║░░░░░███████║███████║██║██████╔╝
██╔══██╗██║░╚═══██╗██║╚██╔╝██║██║██║░░░░░██║░░░░░██╔══██║██╔══██║██║██╔══██╗
██████╦╝██║██████╔╝██║░╚═╝░██║██║███████╗███████╗██║░░██║██║░░██║██║██║░░██║
╚═════╝░╚═╝╚═════╝░╚═╝░░░░░╚═╝╚═╝╚══════╝╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝╚═╝╚═╝░░╚═╝

██████╗░░█████╗░██╗░░██╗███╗░░░███╗░█████╗░███╗░░██╗██╗██████╗░  ██████╗░░█████╗░██╗░░██╗███████╗███████╗███╗░░░███╗
██╔══██╗██╔══██╗██║░░██║████╗░████║██╔══██╗████╗░██║██║██╔══██╗  ██╔══██╗██╔══██╗██║░░██║██╔════╝██╔════╝████╗░████║
██████╔╝███████║███████║██╔████╔██║███████║██╔██╗██║██║██████╔╝  ██████╔╝███████║███████║█████╗░░█████╗░░██╔████╔██║
██╔══██╗██╔══██║██╔══██║██║╚██╔╝██║██╔══██║██║╚████║██║██╔══██╗  ██╔══██╗██╔══██║██╔══██║██╔══╝░░██╔══╝░░██║╚██╔╝██║
██║░░██║██║░░██║██║░░██║██║░╚═╝░██║██║░░██║██║░╚███║██║██║░░██║  ██║░░██║██║░░██║██║░░██║███████╗███████╗██║░╚═╝░██║
╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═╝░░╚══╝╚═╝╚═╝░░╚═╝  ╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░╚═╝╚══════╝╚══════╝╚═╝░░░░░╚═╝

░░██╗██╗███╗░░██╗  ████████╗██╗░░██╗███████╗  ███╗░░██╗░█████╗░███╗░░░███╗███████╗  ░█████╗░███████╗
░██╔╝██║████╗░██║  ╚══██╔══╝██║░░██║██╔════╝  ████╗░██║██╔══██╗████╗░████║██╔════╝  ██╔══██╗██╔════╝
██╔╝░██║██╔██╗██║  ░░░██║░░░███████║█████╗░░  ██╔██╗██║███████║██╔████╔██║█████╗░░  ██║░░██║█████╗░░
╚██╗░██║██║╚████║  ░░░██║░░░██╔══██║██╔══╝░░  ██║╚████║██╔══██║██║╚██╔╝██║██╔══╝░░  ██║░░██║██╔══╝░░
░╚██╗██║██║░╚███║  ░░░██║░░░██║░░██║███████╗  ██║░╚███║██║░░██║██║░╚═╝░██║███████╗  ╚█████╔╝██║░░░░░
░░╚═╝╚═╝╚═╝░░╚══╝  ░░░╚═╝░░░╚═╝░░╚═╝╚══════╝  ╚═╝░░╚══╝╚═╝░░╚═╝╚═╝░░░░░╚═╝╚══════╝  ░╚════╝░╚═╝░░░░░

░█████╗░██╗░░░░░██╗░░░░░░█████╗░██╗░░██╗░░░  ████████╗██╗░░██╗███████╗  ███╗░░░███╗░█████╗░░██████╗████████╗
██╔══██╗██║░░░░░██║░░░░░██╔══██╗██║░░██║░░░  ╚══██╔══╝██║░░██║██╔════╝  ████╗░████║██╔══██╗██╔════╝╚══██╔══╝
███████║██║░░░░░██║░░░░░███████║███████║░░░  ░░░██║░░░███████║█████╗░░  ██╔████╔██║██║░░██║╚█████╗░░░░██║░░░
██╔══██║██║░░░░░██║░░░░░██╔══██║██╔══██║██╗  ░░░██║░░░██╔══██║██╔══╝░░  ██║╚██╔╝██║██║░░██║░╚═══██╗░░░██║░░░
██║░░██║███████╗███████╗██║░░██║██║░░██║╚█║  ░░░██║░░░██║░░██║███████╗  ██║░╚═╝░██║╚█████╔╝██████╔╝░░░██║░░░
╚═╝░░╚═╝╚══════╝╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝░╚╝  ░░░╚═╝░░░╚═╝░░╚═╝╚══════╝  ╚═╝░░░░░╚═╝░╚════╝░╚═════╝░░░░╚═╝░░░

░██████╗░██████╗░░█████╗░░█████╗░██╗░█████╗░██╗░░░██╗░██████╗░░░  ████████╗██╗░░██╗███████╗
██╔════╝░██╔══██╗██╔══██╗██╔══██╗██║██╔══██╗██║░░░██║██╔════╝░░░  ╚══██╔══╝██║░░██║██╔════╝
██║░░██╗░██████╔╝███████║██║░░╚═╝██║██║░░██║██║░░░██║╚█████╗░░░░  ░░░██║░░░███████║█████╗░░
██║░░╚██╗██╔══██╗██╔══██║██║░░██╗██║██║░░██║██║░░░██║░╚═══██╗██╗  ░░░██║░░░██╔══██║██╔══╝░░
╚██████╔╝██║░░██║██║░░██║╚█████╔╝██║╚█████╔╝╚██████╔╝██████╔╝╚█║  ░░░██║░░░██║░░██║███████╗
░╚═════╝░╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═╝░╚════╝░░╚═════╝░╚═════╝░░╚╝  ░░░╚═╝░░░╚═╝░░╚═╝╚══════╝

███╗░░░███╗░█████╗░░██████╗████████╗  ███╗░░░███╗███████╗██████╗░░█████╗░██╗███████╗██╗░░░██╗██╗░░░░░██╗░░
████╗░████║██╔══██╗██╔════╝╚══██╔══╝  ████╗░████║██╔════╝██╔══██╗██╔══██╗██║██╔════╝██║░░░██║██║░░░░░╚██╗░
██╔████╔██║██║░░██║╚█████╗░░░░██║░░░  ██╔████╔██║█████╗░░██████╔╝██║░░╚═╝██║█████╗░░██║░░░██║██║░░░░░░╚██╗
██║╚██╔╝██║██║░░██║░╚═══██╗░░░██║░░░  ██║╚██╔╝██║██╔══╝░░██╔══██╗██║░░██╗██║██╔══╝░░██║░░░██║██║░░░░░░██╔╝
██║░╚═╝░██║╚█████╔╝██████╔╝░░░██║░░░  ██║░╚═╝░██║███████╗██║░░██║╚█████╔╝██║██║░░░░░╚██████╔╝███████╗██╔╝░
╚═╝░░░░░╚═╝░╚════╝░╚═════╝░░░░╚═╝░░░  ╚═╝░░░░░╚═╝╚══════╝╚═╝░░╚═╝░╚════╝░╚═╝╚═╝░░░░░░╚═════╝░╚══════╝╚═╝░░
*/
 
#include<bits/stdc++.h>
using namespace std;
 
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef pair<int,int> pii;
typedef pair<double, double> pdd;
typedef pair<ll, ll> pll;
typedef vector<pii> vii;
typedef vector<pll> vll;
typedef double dl;
 
#define PB push_back
#define F first
#define S second
#define MP make_pair
#define endl '\n'
#define all(a) (a).begin(),(a).end()
#define sz(x) (int)x.size()
#define mid(l,r) ((r+l)/2)
#define left(node) (node*2)
#define right(node) (node*2+1)
#define mx_int_prime 999999937
 
const double PI = acos(-1);
const double eps = 1e-9;
const int inf = 2000000000;
const ll infLL = 9000000000000000000;
#define MOD 1000000007
 
#define mem(a,b) memset(a, b, sizeof(a) )
#define gcd(a,b) __gcd(a,b)
#define sqr(a) ((a) * (a))
 
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);
#define file() freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
 
typedef vector<int>::iterator vit;
typedef set<int>::iterator sit;
 
 
//int dx[] = {0, 0, +1, -1};
//int dy[] = {+1, -1, 0, 0};
//int dx[] = {+1, 0, -1, 0, +1, +1, -1, -1};
//int dy[] = {0, +1, 0, -1, +1, -1, +1, -1};
 
 
 
template < typename F, typename S >
ostream& operator << ( ostream& os, const pair< F, S > & p ) {
            return os << "(" << p.first << ", " << p.second << ")";
}
 
template < typename T >
ostream &operator << ( ostream & os, const vector< T > &v ) {
            os << "{";
                for(auto it = v.begin(); it != v.end(); ++it) {
                                if( it != v.begin() ) os << ", ";
                                        os << *it;
                                            }
                    return os << "}";
}
 
template < typename T >
ostream &operator << ( ostream & os, const set< T > &v ) {
            os << "[";
                for(auto it = v.begin(); it != v.end(); ++it) {
                                if( it != v.begin() ) os << ", ";
                                        os << *it;
                                            }
                    return os << "]";
}
 
template < typename T >
ostream &operator << ( ostream & os, const multiset< T > &v ) {
            os << "[";
                for(auto it = v.begin(); it != v.end(); ++it) {
                                if( it != v.begin() ) os << ", ";
                                        os << *it;
                                            }
                    return os << "]";
}
 
template < typename F, typename S >
ostream &operator << ( ostream & os, const map< F, S > &v ) {
            os << "[";
                for(auto it = v.begin(); it != v.end(); ++it) {
                                if( it != v.begin() ) os << ", ";
                                        os << it -> first << " = " << it -> second ;
                                            }
                    return os << "]";
}
 
#define dbg(args...) do {cerr << #args << " : "; faltu(args); } while(0)
 
void faltu () {
            cerr << endl;
}
 
template <typename T>
void faltu( T a[], int n ) {
            for(int i = 0; i < n; ++i) cerr << a[i] << ' ';
                cerr << endl;
}
 
template <typename T, typename ... hello>
void faltu( T arg, const hello &... rest) {
            cerr << arg << ' ';
                faltu(rest...);
}
int dx[4] = {-1, 1, -1, 1}, dy[4] = {-1, -1, 1, 1};
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        long long a, b;
        cin >> a >> b;
        long long x_king, y_king;
        cin >> x_king >> y_king;
        long long x_queen, y_queen;
        cin >> x_queen >> y_queen;
        set<pair<int,int>> king_hits, queen_hits;
 
        for(int j = 0; j < 4; j++){
            king_hits.insert({x_king+dx[j]*a, y_king+dy[j]*b});
            king_hits.insert({x_king+dx[j]*b, y_king+dy[j]*a});
 
            queen_hits.insert({x_queen+dx[j]*a, y_queen+dy[j]*b});
            queen_hits.insert({x_queen+dx[j]*b, y_queen+dy[j]*a});
        }
        int ans = 0;
        for(auto position : king_hits)
            if(queen_hits.find(position) != queen_hits.end())
                ans++;
        cout << ans << endl;
    }
    return 0;
}